daemon off;

user <%= scope.lookupvar "::boxen_user" %> staff;

worker_processes 2;
pid <%= scope.lookupvar "nginx::config::pidfile" %>;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "http_x_forwarded_for"';

  access_log <%= scope.lookupvar "nginx::config::logdir" %>/access.log main;
  error_log  <%= scope.lookupvar "nginx::config::logdir" %>/error.log debug;

  sendfile on;

  tcp_nopush  on;
  tcp_nodelay off;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;

  server_names_hash_bucket_size 128;
  server_names_hash_max_size 20000;
  proxy_headers_hash_bucket_size 128;
  proxy_headers_hash_max_size 20000;

  underscores_in_headers on;

  server {

    listen 80 default_server;
    index index.html index.htm index.php;

    set $basepath "/Users/<%= @boxen_user %>/www";

    set $domain $host;

    # check one name domain for simple application
    if ($domain ~ "^(.[^.]*)\.dev$") {
      set $domain $1;
      set $rootpath "${domain}";
      set $servername "${domain}.dev";
    }

    # check multi name domain to multi application
    if ($domain ~ "^(.*)\.(.[^.]*)\.dev$") {
      set $subdomain $1;
      set $domain $2;
      set $rootpath "${domain}/${subdomain}/www/";
      set $servername "${subdomain}.${domain}.dev";
    }

    server_name $servername;

    root $basepath/$rootpath;

    location / {
      try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
      # With php5-cgi alone:
      ###-> fastcgi_pass 127.0.0.1:9000;
      # With php5-fpm (points to socket):
      fastcgi_pass  unix:<%= scope.lookupvar "boxen::config::socketdir" %>/<%= scope.lookupvar "nginx-default::phpversion" %>;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $request_filename;
      include <%= scope.lookupvar "nginx::config::configdir" %>/fastcgi_params;

    }

    location /phpMyAdmin {
      rewrite ^/* /phpmyadmin last;
    }

    # disallow access to apache configs
    location ~ /\.ht {
      deny all;
    }

    # disallow access to git configs path
    location ~ /\.git {
      deny all;
    }
  }
  include <%= scope.lookupvar "nginx::config::sitesdir" %>/*;
}
